{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comments","map","comment","className","name","href","email","body","id","CommentList","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"s28IAEaA,EAAc,SAAC,GAAD,QAAGC,gBAAH,MAAc,GAAd,SACzB,mCACGA,EAASC,KAAI,SAAAC,GAAO,OACnB,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAC9C,OACD,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,SAboBL,EAAQM,UCFlCC,G,MAAc,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAH,OACzB,mCACE,oBAAIG,UAAU,cAAd,SACE,cAAC,EAAD,CAAaH,SAAUA,UCNhBU,EAAW,SAAC,GAAD,QAAGC,KAAQP,EAAX,EAAWA,KAAME,EAAjB,EAAiBA,MAAjB,OACtB,mBAAGH,UAAU,WAAWE,KAAI,iBAAYC,GAAxC,SACGF,KCEQQ,G,MAAW,SAAC,GAAD,QAAGC,KAAQL,EAAX,EAAWA,GAAIG,EAAf,EAAeA,KAAMG,EAArB,EAAqBA,MAAOP,EAA5B,EAA4BA,KAAMP,EAAlC,EAAkCA,SAAlC,OACtB,mCACE,qBAAIG,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,GAAWH,SAI/B,mBAAGL,UAAU,iBAAb,SACGI,IAGH,uBAECP,EAASe,OAAS,EACf,cAAC,EAAD,CAAaf,SAAUA,GAAeQ,GACtC,mBAAG,UAAQ,oBAAX,oCCtBGQ,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAId,UAAU,WAAd,SACGc,EAAMhB,KAAI,SAAAY,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKL,WCS/B,IAAMS,EAAQC,EAAgBjB,KAAI,SAAAY,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBQ,EAUDN,EAAKM,OAThBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKH,KAAOW,MAUhDnB,UAP2BQ,EAOGK,EAAKL,GAN5Bc,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQsB,SAAWhB,QADjE,IAA6BA,EAJRW,KAcRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.085a151a.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comments = [] }) => (\n  <>\n    {comments.map(comment => (\n      <li className=\"CommentInfo\" key={comment.id}>\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">{comment.name}</strong>\n          {' by '}\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${comment.email}`}\n          >\n            {comment.email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {comment.body}\n        </div>\n      </li>\n    ))}\n  </>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <ul className=\"CommentList\">\n      <CommentInfo comments={comments} />\n    </ul>\n  </>\n);\n","export const UserInfo = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { id, user, title, body, comments } }) => (\n  <>\n    <li className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} key={id} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {comments.length > 0\n        ? <CommentList comments={comments} key={id} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>}\n\n    </li>\n  </>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentsByPostId(id) {\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}